#!/bin/bash
#***************************************************************************************************************
# SHELL SCRIPT: test.sh
#
# DESCRIPTION
# Tests the Vigenere cipher program.
#
# AUTHOR INFORMATION
# Kevin R. Burger [KRB]
#
# Mailing Address:
# Computer Science & Engineering
# School of Computing, Informatics, and Decision Systems Engineering
# Arizona State University
# Tempe, AZ 85287-8809
#
# Email: burgerk@asu
# Web:   http://kevin.floorsoup.com
#
# MODIFICATION HISTORY:
# --------------------------------------------------------------------------------------------------------------
# 24 Jan 2012 [KRB] Initial revision.
#***************************************************************************************************************

#----- Dos2Unix ------------------------------------------------------------------------------------------------
# Converts a text file stored in MSDOS/Windows format to Unix format. In MSDOS/Windows, each line of a
# text file is terminated with a carriage return (CR)/linefeed (LF) sequence. In Unix, each line of a
# text file is simply terminated with a LF. The dos2unix command simply replaces each occurrence of CR/LF
# with LF.
#
# BTW, this is necessary because I edit my files on my PC using a Windows text editor. Then I transfer the
# files up to General using WinSCP, and I do my building, debugging, and testing on General. If I were simply
# using VI on General, then this function would not be necessary.
#---------------------------------------------------------------------------------------------------------------
Dos2Unix() {
	dos2unix < $_file > $_file.new
	rm $_file
	mv $_file.new $_file
}

#----- TestEncrypt ---------------------------------------------------------------------------------------------
# Perform the encryption test case corresponding to the value of variable _tc.
#---------------------------------------------------------------------------------------------------------------
TestEncrypt() {
	echo -n Performing Encryption Test Case $_tc...

	# Set _cipher to the name of the ciphertext file that will be generated by performing the test case. Set
	# _diff to the name of the file containing the output from the diff command. Set _key to the name of the
	# key file. Set _plainin to the name of text file containing the plaintext which will be encrypted. Set
	# _plainout to the name of the text file containing the decrypted ciphertext.
	_cipher=cipher$_tc.txt
    _correct=cipher$_tc.correct
	_diffencrypt=diffencrypt$_tc.txt
	_key=key$_tc.txt
	_plain=plain$_tc.txt

    # If running on Cygwin, convert the key file and the 'plainin' files to Unix format.
    if [ $_cygwin = 1 ]; then
	    _file=$_key
	    Dos2Unix
	    _file=$_plain
	    Dos2Unix
    fi

	# Encrypt the plaintext file to produce the ciphertext file.
	$_binary e -k $_key < $_plain > $_cipher

    # If running on Cygwin, convert the 'cipher' file to Unix format, just in case.
    if [ $_cygwin = 1 ]; then
	    _file=$_cipher
	    Dos2Unix
    fi

	diff $_cipher $_correct > $_diffencrypt

	if test -s $_diffencrypt; then
		echo "FAILED. See" $_diffencrypt "for differences and" $_cipher "for the ciphertext."
	else
		rm -f $_cipher
		rm -f $_diffencrypt
		echo "PASSED"
	fi
}

#----- TestDecrypt ---------------------------------------------------------------------------------------------
# Perform the decryption test case corresponding to the value of variable _tc.
#---------------------------------------------------------------------------------------------------------------
TestDecrypt() {
	echo -n Performing Decryption Test Case $_tc...

	_cipher=cipher$_tc.correct
	_diffdecrypt=diffdecrypt$_tc.txt
	_key=key$_tc.txt
	_plain=plain$_tc.txt
	_plainout=plainout$_tc.txt

    # If running on Cygwin, convert the key file and the cipher' files to Unix format.
    if [ $_cygwin = 1 ]; then
	    _file=$_key
	    Dos2Unix
	    _file=$_cipher
	    Dos2Unix
    fi

	# Decrypt the ciphertext file to produce the plaintext file.
	$_binary d -k $_key < $_cipher > $_plainout

    # If running on Cygwin, convert the 'plainout' file to Unix format, just in case.
    if [ $_cygwin = 1 ]; then
	    _file=$_plainout
	    Dos2Unix
    fi

	diff $_plain $_plainout > $_diffdecrypt

	if test -s $_diffdecrypt; then
		echo "FAILED. See" $_diffdecrypt "for differences and" $_plainout "for the plaintext."
	else
		rm -f $_plainout
		rm -f $_diffdecrypt
		echo "PASSED"
	fi
}

#---------------------------------------------------------------------------------------------------------------
# Starting point of execution for the shell script.
#---------------------------------------------------------------------------------------------------------------

# Determine if we are running on Cygwin. If so, _cygwin is set to 1, else _cygwin is set to 0.
case $(tr  [:upper:] [:lower:] <<< `uname -a`) in
    *"cygwin"*) _cygwin=1 ;;
             *) _cygwin=0 ;;
esac

# _binary is the name of the executable program (i.e., in Unix lingo this is called a binary).
if [ $_cygwin = 1 ]; then
    _binary=./vigenere.exe
else 
    _binary=./vigenere
fi

# Store the current working directory in _currdir. We are going to cd to the testing directory and
# when we are done testing, we will cd back to the current directory.
_currdir=`pwd`

# This is the directory containing the test cases.
_testdir=testcases

# Copy the binary to the test cases directory.
cp $_binary $_testdir

# cd to the test cases directory.
cd $_testdir

# Let _tc take on the values 1, 2, 3, 4. The test case files are named (key1.txt, plain1.txt),
# (key2.txt, plain2.txt), ... . For each value of _tc, call the Test function.
for _tc in `seq 1 4`; do
	TestEncrypt
	TestDecrypt
done

# cd back to the original working directory.
cd $_curdir

# Delete all variables.
_binary=
_cipher=
_correct=
_curdir=
_cygwin=
_diffdecrypt=
_diffencrypt=
_file=
_key=
_plain=
_plainout=
_tc=
_testdir=
